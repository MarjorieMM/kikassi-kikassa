security:
  encoders:
    App\Entity\AdhesionBibliotheque:
      algorithm: bcrypt
    App\Entity\SuperAdmin:
      algorithm: bcrypt
  providers:
    users_in_memory: { memory: null }
    superadmin:
      entity: { class: App\Entity\SuperAdmin, property: email }
    user:
      entity: { class: App\Entity\AdhesionBibliotheque, property: email }
    all_users:
      chain:
        providers: ['superadmin', 'user']
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    backoffice:
      pattern: ^/admin
      anonymous: true
      lazy: true
      provider: all_users
      guard:
        authenticators:
          - App\Security\AppAdminAuthenticator
      logout:
        path: admin_logout
        target: admin_login
    main:
      anonymous: true
      lazy: true
      provider: user
      guard:
        authenticators:
          - App\Security\AppUserAuthenticator
      logout:
        path: app_logout
        target: home
  role_hierarchy:
    ROLE_ADMIN:       ROLE_USER
    ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
     - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
     - { path: ^/admin, roles: [ROLE_ADMIN, ROLE_SUPER_ADMIN] }
     - { path: ^/home/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
     - { path: ^/home/mon_compte, roles: ROLE_USER }
     - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
